"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[239],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var s=2;s<r;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4181:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=n(7462),i=(n(7294),n(3905));const r={id:"quick-start",title:"Quick Start (with GenoPipe)",sidebar_label:"Quick Start (with GenoPipe)"},a=void 0,p={unversionedId:"quick-start",id:"quick-start",title:"Quick Start (with GenoPipe)",description:"Limitations of GenoPipe (PLEASE READ BEFORE USING TO SAVE YOURSELF SOME TIME!)",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/GenoPipe-docs/docs/quick-start",draft:!1,editUrl:"https://github.com/CEGRcode/GenoPipe-docs/docs/quick-start.md",tags:[],version:"current",frontMatter:{id:"quick-start",title:"Quick Start (with GenoPipe)",sidebar_label:"Quick Start (with GenoPipe)"},sidebar:"tutorialSidebar",previous:{title:"Welcome",permalink:"/GenoPipe-docs/docs/welcome"}},l={},s=[{value:"Limitations of GenoPipe (PLEASE READ BEFORE USING TO SAVE YOURSELF SOME TIME!)",id:"limitations-of-genopipe-please-read-before-using-to-save-yourself-some-time",level:2},{value:"Set-up instructions (all modules)",id:"set-up-instructions-all-modules",level:2},{value:"EpitopeID",id:"epitopeid",level:2},{value:"1. Download genome",id:"1-download-genome",level:3},{value:"2. Execute the EpitopeID shell script",id:"2-execute-the-epitopeid-shell-script",level:3}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"limitations-of-genopipe-please-read-before-using-to-save-yourself-some-time"},"Limitations of GenoPipe (PLEASE READ BEFORE USING TO SAVE YOURSELF SOME TIME!)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"DeletionID cannot identify deletions in RNAseq datasets (see docs to read more about why)"),(0,i.kt)("li",{parentName:"ul"},"DeletionID cannot identify deletions in human datasets without extremely high coverage (see docs or ",(0,i.kt)("a",{parentName:"li",href:"https://www.google.com"},"publication"),")"),(0,i.kt)("li",{parentName:"ul"},"high repeat regions"),(0,i.kt)("li",{parentName:"ul"})),(0,i.kt)("h2",{id:"set-up-instructions-all-modules"},"Set-up instructions (all modules)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git clone www.github/CEGRcode/GenoPipe\nWRK=`pwd`\n")),(0,i.kt)("h2",{id:"epitopeid"},"EpitopeID"),(0,i.kt)("p",null,"Let's say you cloned GenoPipe into your working directory where there is another directory that includes all the raw FASTQ inputs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/path/to/working/directory/\n|--MySamples\n|  |--sampleA_R1.fastq.gz\n|  |--sampleA_R2.fastq.gz\n|  |--sampleB_R1.fastq.gz\n|  |--sampleB_R2.fastq.gz\n|--MyOutputDirectory\n   |--<empty>\n|--GenoPipe/\n   |--EpitopeID/\n      |--identify_Epitope.sh\n      |--utility_scripts/\n         |--genome_data/\n            |--download_sacCer3_Genome.sh\n            |--download_hg19_Genome.sh\n      ...\n   ...\n")),(0,i.kt)("h3",{id:"1-download-genome"},"1. Download genome"),(0,i.kt)("p",null,"Yeast instructions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd $WRK/GenoPipe/EpitopeID/utility_scripts/genome_data/\nbash download_sacCer3_Genome.sh\nmv genome.fa ../../sacCer3_EpiID/FASTA_genome/\n")),(0,i.kt)("p",null,"Human instructions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd $WRK/GenoPipe/EpitopeID/utility_scripts/genome_data/\nbash download_hg19_Genome.sh\nmv genome.fa ../../sacCer3_EpiID/FASTA_genome/\n")),(0,i.kt)("h3",{id:"2-execute-the-epitopeid-shell-script"},"2. Execute the EpitopeID shell script"),(0,i.kt)("p",null,"Yeast instructions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd $WRK/GenoPipe/EpitopeID\nbash identify_Epitope.sh -i $WRK/MySamples/ -o $WRK/MyOutputDirectory/ -d $WRK/GenoPipe/EpitopeID/sacCer3_EpiID -t 4\n")),(0,i.kt)("p",null,"Human instructions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd $WRK/GenoPipe/EpitopeID\nbash identify_Epitope.sh -i $WRK/MySamples/ -o $WRK/MyOutputDirectory/ -d $WRK/GenoPipe/EpitopeID/hg19_EpiID -t 4\n")))}u.isMDXComponent=!0}}]);