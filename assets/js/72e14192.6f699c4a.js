"use strict";(self.webpackChunkgenopipe=self.webpackChunkgenopipe||[]).push([[239],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(n),m=i,h=c["".concat(l,".").concat(m)]||c[m]||u[m]||r;return n?o.createElement(h,a(a({ref:t},d),{},{components:n})):o.createElement(h,a({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:i,a[1]=p;for(var s=2;s<r;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4181:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var o=n(7462),i=(n(7294),n(3905));const r={id:"quick-start",title:"Quick Start",sidebar_label:"Quick Start"},a=void 0,p={unversionedId:"quick-start",id:"quick-start",title:"Quick Start",description:"These are quick setup instructions for running each of the GenoPipe modules out-of-the-box using the provided sacCer3 and hg19 reference files. For more details on customizations or reading reports, check out the module-specific pages (EpitopeID, DeletionID, and StrainID)",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/GenoPipe-docs/docs/quick-start",draft:!1,editUrl:"https://github.com/CEGRcode/GenoPipe-docs/docs/quick-start.md",tags:[],version:"current",frontMatter:{id:"quick-start",title:"Quick Start",sidebar_label:"Quick Start"},sidebar:"generalSidebar",previous:{title:"Welcome",permalink:"/GenoPipe-docs/docs/welcome"}},l={},s=[{value:"Set-up instructions (all modules)",id:"set-up-instructions-all-modules",level:2},{value:"Joe Schmoe Example",id:"joe-schmoe-example",level:3},{value:"EpitopeID",id:"epitopeid",level:2},{value:"1. Check FASTQ filenames",id:"1-check-fastq-filenames",level:3},{value:"2. Download genome",id:"2-download-genome",level:3},{value:"3. Run EpitopeID",id:"3-run-epitopeid",level:3},{value:"Joe Schmoe Example",id:"joe-schmoe-example-1",level:3},{value:"DeletionID",id:"deletionid",level:2},{value:"1. Align FASTQ input files",id:"1-align-fastq-input-files",level:3},{value:"2. Run DeletionID",id:"2-run-deletionid",level:3},{value:"Joe Schmoe Example",id:"joe-schmoe-example-2",level:3},{value:"StrainID",id:"strainid",level:2},{value:"1. Align FASTQ input files",id:"1-align-fastq-input-files-1",level:3},{value:"2. Run StrainID",id:"2-run-strainid",level:3},{value:"Joe Schmoe Example",id:"joe-schmoe-example-3",level:3}],d={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"These are quick setup instructions for running each of the GenoPipe modules out-of-the-box using the provided sacCer3 and hg19 reference files. For more details on customizations or reading reports, check out the module-specific pages (","[EpitopeID][epitopeid]",", ","[DeletionID][deletionid]",", and ","[StrainID][strainid]",")"),(0,i.kt)("h2",{id:"set-up-instructions-all-modules"},"Set-up instructions (all modules)"),(0,i.kt)("p",null,"To download GenoPipe, you can clone the repository. No builds needed."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git clone www.github/CEGRcode/GenoPipe\nWRK=`pwd`  # Save current working directory path to env variable\n")),(0,i.kt)("p",null,"Make sure all ",(0,i.kt)("a",{parentName:"p",href:"/docs/welcome#dependencies"},"dependencies are installed"),"."),(0,i.kt)("h3",{id:"joe-schmoe-example"},"Joe Schmoe Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Download GenoPipe\ncd /User/joeschmoe/Desktop/\ngit clone GenoPipe\n")),(0,i.kt)("p",null,"The final directory structure after running all of the Joe Schmoe examples below should look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/User/joeschmoe/Desktop\n  |--GenoPipe\n  |  |--EpitopeID\n  |  |  |--...\n  |  |--DeletionID\n  |  |  |--...\n  |  |--StrainID\n  |  |  |--...\n  |  |--sacCer3.fa\n  |--myfastq\n  |  |--SampleA_R1.fastq.gz\n  |  |--SampleB_R1.fastq.gz\n  |  |--SampleB_R2.fastq.gz\n  |--mybam\n  |  |--SampleA.bam\n  |  |--SampleB.bam\n  |--myreports_EID\n  |  |--SampleA_R1-ID.tab\n  |  |--SampleB_R1-ID.tab\n  |--myreports_DID\n  |  |--SampleA_deletion.tab\n  |  |--SampleB_deletion.tab\n  |--myreports_SID\n     |--SampleA_strain.tab\n     |--SampleB_strain.tab\n")),(0,i.kt)("h2",{id:"epitopeid"},"EpitopeID"),(0,i.kt)("p",null,"Let's say you cloned GenoPipe into your working directory where there is another directory that includes all the raw FASTQ inputs."),(0,i.kt)("h3",{id:"1-check-fastq-filenames"},"1. Check FASTQ filenames"),(0,i.kt)("p",null,"EpitopeID takes gzipped FASTQ files as input. The file name should end with a ",(0,i.kt)("inlineCode",{parentName:"p"},"_R1")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"_R2")," and use the extension ",(0,i.kt)("inlineCode",{parentName:"p"},"fastq.gz")," (the standard naming convention of Illumina libraries)."),(0,i.kt)("h3",{id:"2-download-genome"},"2. Download genome"),(0,i.kt)("p",null,"The following instructions are for setting up the database of reference files used by EpitopeID using the provided genome builds and epitope tag sequences. To customize your database, see the ","[full documentation][epitopeid]","."),(0,i.kt)("p",null,"For downloading yeast genome..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd $WRK/GenoPipe/EpitopeID/utility_scripts/genome_data/\nbash download_sacCer3_Genome.sh\nmv genome.fa ../../sacCer3_EpiID/FASTA_genome/\n")),(0,i.kt)("p",null,"For downloading human genome..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd $WRK/GenoPipe/EpitopeID/utility_scripts/genome_data/\nbash download_hg19_Genome.sh\nmv genome.fa ../../sacCer3_EpiID/FASTA_genome/\n")),(0,i.kt)("h3",{id:"3-run-epitopeid"},"3. Run EpitopeID"),(0,i.kt)("p",null,"When providing path locations, it is important that you provide ",(0,i.kt)("strong",{parentName:"p"},"absolute paths")," (i.e. path should start with ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"~/"),")."),(0,i.kt)("p",null,"For yeast (sacCer3) samples..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd GenoPipe/EpitopeID\nbash identify-Epitope.sh -i /path/to/FASTQ -o /path/to/output -d /path/to/GenoPipe/EpitopeID/sacCer3_EpiID\n")),(0,i.kt)("p",null,"For human (hg19) samples..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd GenoPipe/EpitopeID\nbash identify-Epitope.sh -i /path/to/FASTQ -o /path/to/output -d /path/to/GenoPipe/EpitopeID/hg19_EpiID\n")),(0,i.kt)("h3",{id:"joe-schmoe-example-1"},"Joe Schmoe Example"),(0,i.kt)("p",null,"In the following example, GenoPipe, the directory including all the input yeast FASTQ files, and the new directory for storing EpitopeID reports are stored on the Desktop of Joe Schmoe. Filepaths would need to be changed according to a user's preferred directory structure."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Download Genomic FASTA and move to appropriate directory\ncd /User/joeschmoe/Desktop/GenoPipe/EpitopeID/utility_scripts/genome_data/\nbash download_sacCer3_Genome.sh\nmv genome.fa* ../../sacCer3_EpiID/FASTA_genome/\ncd ../../\nmkdir ../../myreports_EID\n# Run EpitopeID\nbash identify-Epitope.sh -i /User/joeschmoe/Desktop/myfastq -o /User/joeschmoe/Desktop/myreports_EID -d /User/joeschmoe/Desktop/GenoPipe/EpitopeID/sacCer3_EpiID\n")),(0,i.kt)("h2",{id:"deletionid"},"DeletionID"),(0,i.kt)("h3",{id:"1-align-fastq-input-files"},"1. Align FASTQ input files"),(0,i.kt)("p",null,"DeletionID uses BAM files as its input. Make sure that the reads are aligned to sacCer3 if you are using the default interval database. Any aligner that outputs standard BAM format can be used to generate the BAM input. DeletionID was tested on BAM files built using ",(0,i.kt)("a",{parentName:"p",href:"http://bio-bwa.sourceforge.net/bwa.shtml"},"BWA-MEM"),"."),(0,i.kt)("h3",{id:"2-run-deletionid"},"2. Run DeletionID"),(0,i.kt)("p",null,"For yeast (sacCer3) samples..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd GenoPipe/DeletionID\nbash identify-Deletion.sh -i /path/to/BAM -o /path/to/output -d /path/to/GenoPipe/DeletionID/sacCer3_Del\n")),(0,i.kt)("h3",{id:"joe-schmoe-example-2"},"Joe Schmoe Example"),(0,i.kt)("p",null,"In the following example, GenoPipe, the directory including all the input yeast BAM files, and the new directory for storing DeletionID reports are stored on the Desktop of Joe Schmoe. Filepaths would need to be changed according to a user's preferred directory structure."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd /User/joeschmoe/Desktop/GenoPipe/DeletionID\nmkdir ../../myreports_DID\n# Run DeletionID\nbash identify-Deletion.sh -i /User/joeschmoe/Desktop/mybam -o /User/joeschmoe/Desktop/myreports_DID -d /User/joeschmoe/Desktop/GenoPipe/DeletionID/sacCer3_Del\n")),(0,i.kt)("h2",{id:"strainid"},"StrainID"),(0,i.kt)("h3",{id:"1-align-fastq-input-files-1"},"1. Align FASTQ input files"),(0,i.kt)("p",null,"StrainID uses BAM files as its input. Make sure that the reads are aligned to the appropriate sacCer3 or hg19 genome build if you are using the default interval database. Any aligner that outputs standard BAM format can be used to generate the BAM input. StrainID was tested on ",(0,i.kt)("a",{parentName:"p",href:"http://bio-bwa.sourceforge.net/bwa.shtml"},"BWA-MEM"),"."),(0,i.kt)("h3",{id:"2-run-strainid"},"2. Run StrainID"),(0,i.kt)("p",null,"For yeast (sacCer3) samples..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd GenoPipe/StrainID\nbash identify-Strain.sh -i /path/to/BAM -o /path/to/output -g /path/to/sacCer3.fa -v /path/to/GenoPipe/StrainID/sacCer3_VCF\n")),(0,i.kt)("p",null,"For human (hg19) samples..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd GenoPipe/StrainID\nbash identify-Strain.sh -i /path/to/BAM -o /path/to/output -g /path/to/hg19.fa -v /path/to/GenoPipe/StrainID/hg19_VCF\n")),(0,i.kt)("h3",{id:"joe-schmoe-example-3"},"Joe Schmoe Example"),(0,i.kt)("p",null,"In the following example, GenoPipe, the directory including all the input yeast BAM files, and the new directory for storing DeletionID reports are stored on the Desktop of Joe Schmoe. Filepaths would need to be changed according to a user's preferred directory structure."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cd /User/joeschmoe/Desktop/GenoPipe/\ncd EpitopeID/utility_scripts/genome_data\nbash download_sacCer3_Genome.sh\nmv genome.fa /User/joeschmoe/Desktop/GenoPipe/sacCer3.fa\ncd ../../../StrainID\nmkdir ../../myreports_SID\n# Run StrainID\nbash identify-Strain.sh -i /User/joeschmoe/Desktop/mybam -o /User/joeschmoe/Desktop/myreports_SID -g /User/joeschmoe/Desktop/GenoPipe/sacCer3.fa -v /User/joeschmoe/Desktop/GenoPipe/StrainID/sacCer3_VCF\n")))}u.isMDXComponent=!0}}]);