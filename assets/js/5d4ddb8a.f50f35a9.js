"use strict";(self.webpackChunkgenopipe=self.webpackChunkgenopipe||[]).push([[456],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(r),m=o,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[f]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4058:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={id:"genome",title:"",sidebar_label:"Genome Files (-g)"},i="Reference Genome (-g)",c={unversionedId:"StrainID/genome",id:"StrainID/genome",title:"",description:"A reference genome is required for StrainID to determine the background model of mutation rates. Include the filepath for to the genomic FASTA file for the parameter value. Make sure the genome used matches the genome the VCF coordinates are based off of.",source:"@site/docs/StrainID/genome.md",sourceDirName:"StrainID",slug:"/StrainID/genome",permalink:"/docs/StrainID/genome",draft:!1,tags:[],version:"current",lastUpdatedBy:"owlang",lastUpdatedAt:1684252962,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{id:"genome",title:"",sidebar_label:"Genome Files (-g)"},sidebar:"strainSidebar",previous:{title:"Input Files (-i)",permalink:"/docs/StrainID/input"},next:{title:"Reference Database (-v)",permalink:"/docs/StrainID/db/structure"}},l={},s=[],p={toc:s},f="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(f,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"reference-genome--g"},"Reference Genome (",(0,o.kt)("inlineCode",{parentName:"h1"},"-g"),")"),(0,o.kt)("p",null,"A reference genome is required for StrainID to determine the background model of mutation rates. Include the filepath for to the genomic FASTA file for the parameter value. Make sure the genome used matches the genome the VCF coordinates are based off of."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Input BAM files, VCF reference files, and Genome reference files all NEED to be based on the same genome build. Do not mix and match for this!")))}u.isMDXComponent=!0}}]);